[{"/Users/michaeltyler/whattodo/client/src/index.js":"1","/Users/michaeltyler/whattodo/client/src/components/WhatToDo.js":"2","/Users/michaeltyler/whattodo/client/src/components/ApplicationViews.js":"3","/Users/michaeltyler/whattodo/client/src/components/auth/Login.js":"4","/Users/michaeltyler/whattodo/client/src/components/auth/Register.js":"5","/Users/michaeltyler/whattodo/client/src/components/nav/NavBar.js":"6","/Users/michaeltyler/whattodo/client/src/components/todos/TodoDataProvider.js":"7","/Users/michaeltyler/whattodo/client/src/components/todos/Todo.js":"8","/Users/michaeltyler/whattodo/client/src/components/utils/request.js":"9","/Users/michaeltyler/whattodo/client/src/components/todos/TodoAccordian.js":"10","/Users/michaeltyler/whattodo/client/src/components/category/CategoryDataProvider.js":"11","/Users/michaeltyler/whattodo/client/src/components/todotags/TodoTagsList.js":"12","/Users/michaeltyler/whattodo/client/src/components/todotags/TodoTagForm.js":"13","/Users/michaeltyler/whattodo/client/src/components/tags/TagsDataProvider.js":"14","/Users/michaeltyler/whattodo/client/src/components/tags/TagForm.js":"15","/Users/michaeltyler/whattodo/client/src/components/utils/SubmitButton.js":"16","/Users/michaeltyler/whattodo/client/src/components/tags/TagManager.js":"17","/Users/michaeltyler/whattodo/client/src/components/tags/TagList.js":"18","/Users/michaeltyler/whattodo/client/src/components/tags/Tag.js":"19","/Users/michaeltyler/whattodo/client/src/components/todos/TodoForm.js":"20","/Users/michaeltyler/whattodo/client/src/components/utils/helper.js":"21"},{"size":367,"mtime":1608051795240,"results":"22","hashOfConfig":"23"},{"size":1098,"mtime":1608220832799,"results":"24","hashOfConfig":"23"},{"size":1278,"mtime":1608776413215,"results":"25","hashOfConfig":"23"},{"size":2587,"mtime":1608051795229,"results":"26","hashOfConfig":"23"},{"size":4383,"mtime":1608051795235,"results":"27","hashOfConfig":"23"},{"size":1374,"mtime":1608776413217,"results":"28","hashOfConfig":"23"},{"size":572,"mtime":1608776413219,"results":"29","hashOfConfig":"23"},{"size":552,"mtime":1608776413218,"results":"30","hashOfConfig":"23"},{"size":1194,"mtime":1608240537625,"results":"31","hashOfConfig":"23"},{"size":1527,"mtime":1608222105013,"results":"32","hashOfConfig":"23"},{"size":634,"mtime":1608220832800,"results":"33","hashOfConfig":"23"},{"size":387,"mtime":1608222105014,"results":"34","hashOfConfig":"23"},{"size":0,"mtime":1608776413219,"results":"35","hashOfConfig":"23"},{"size":969,"mtime":1608240537622,"results":"36","hashOfConfig":"23"},{"size":1576,"mtime":1608240537621,"results":"37","hashOfConfig":"23"},{"size":285,"mtime":1608776413220,"results":"38","hashOfConfig":"23"},{"size":285,"mtime":1608240537622,"results":"39","hashOfConfig":"23"},{"size":1747,"mtime":1608240537622,"results":"40","hashOfConfig":"23"},{"size":200,"mtime":1608240537621,"results":"41","hashOfConfig":"23"},{"size":0,"mtime":1608776413219,"results":"42","hashOfConfig":"23"},{"size":144,"mtime":1608220832804,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18bbflb",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaeltyler/whattodo/client/src/index.js",[],["93","94"],"/Users/michaeltyler/whattodo/client/src/components/WhatToDo.js",[],"/Users/michaeltyler/whattodo/client/src/components/ApplicationViews.js",[],"/Users/michaeltyler/whattodo/client/src/components/auth/Login.js",[],"/Users/michaeltyler/whattodo/client/src/components/auth/Register.js",[],"/Users/michaeltyler/whattodo/client/src/components/nav/NavBar.js",["95"],"/Users/michaeltyler/whattodo/client/src/components/todos/TodoDataProvider.js",[],"/Users/michaeltyler/whattodo/client/src/components/todos/Todo.js",[],"/Users/michaeltyler/whattodo/client/src/components/utils/request.js",[],"/Users/michaeltyler/whattodo/client/src/components/todos/TodoAccordian.js",["96","97"],"import React, { useContext, useEffect } from \"react\";\nimport { Fragment } from \"react\";\nimport { Accordion, Card, Button, ListGroup } from \"react-bootstrap\";\nimport { CategoryContext } from \"../category/CategoryDataProvider\";\nimport { Todo } from \"./Todo\";\nimport { TodoContext } from \"./TodoDataProvider\";\n\nconst TodoAccordian = (props) => {\n    const {todos, getTodos} = useContext(TodoContext)\n    const {categories, getCategories} = useContext(CategoryContext)\n\n    useEffect(()=>{\n        getTodos()\n        getCategories()\n        \n    },[])\n\n    \n\n    return (\n        <Accordion>\n            <Card>\n                {categories.map((c)=>{\n                    return(<Fragment key={c.id}>\n                        <Card.Header>\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey={c.id}>\n                            <h3>{c.label}</h3>\n                            </Accordion.Toggle>\n                        </Card.Header>\n                        <Accordion.Collapse eventKey={c.id}>\n                            <ListGroup variant=\"flush\">{todos.map((td)=>{\n                                if (td.category.id === c.id) {\n                                    return <Todo key={td.id} task={td.task} tags={td.tags}/>\n                                }\n                            })}</ListGroup>\n                            </Accordion.Collapse>\n                  </Fragment>\n                    )\n                })}\n            </Card>\n        </Accordion>\n    )\n}\n\nexport default TodoAccordian;","/Users/michaeltyler/whattodo/client/src/components/category/CategoryDataProvider.js",[],"/Users/michaeltyler/whattodo/client/src/components/todotags/TodoTagsList.js",[],"/Users/michaeltyler/whattodo/client/src/components/todotags/TodoTagForm.js",["98"],"import React, { useContext, useEffect } from \"react\";\nimport { TagContext } from \"../tags/TagsDataProvider\"\nimport Button from \"react-bootstrap/esm/Button\";\n\nexport const TodoTagForm = ({selectedTodoTagIds, onToggleTodoTag}) => {\n  //This component renders each tag as button, styled as either primary or secondary,\n  //depending on whether the tag has been selected. The parent component gets to decide\n  //which tags have been selected, and what to do when the button is pressed.\n  const { tags, getTags } = useContext(TagContext);\n\n  useEffect(() => {\n    getTags();\n  }, []);\n\n  return (\n    <>\n      {tags.map((tag) => {\n        const tagSelected = selectedTodoTagIds.some((tagId) => tagId === tag.id);\n        return (\n          <Button\n            className=\"m-2\"\n            size=\"sm\"\n            variant={tagSelected ? \"primary\" : \"secondary\"}\n            key={tag.id}\n            onClick={(evt) => onToggleTodoTag(tag.id)}\n          >\n            {tag.label}\n          </Button>\n        );\n      })}\n    </>\n  );\n};\n","/Users/michaeltyler/whattodo/client/src/components/tags/TagsDataProvider.js",[],"/Users/michaeltyler/whattodo/client/src/components/tags/TagForm.js",[],"/Users/michaeltyler/whattodo/client/src/components/utils/SubmitButton.js",["99"],"import React from \"react\"\nimport { Button } from \"react-bootstrap\"\n// THIS IS THE BEST COMPONENT\nexport default (props) => {\n    return (\n        <Button onClick={props.onClick} type={props.type || \"submit\"} className=\"w-50 mx-auto\">\n            {props.label}\n        </Button>\n    )\n}","/Users/michaeltyler/whattodo/client/src/components/tags/TagManager.js",[],"/Users/michaeltyler/whattodo/client/src/components/tags/TagList.js",["100","101","102"],"import React, { useContext, useEffect } from \"react\";\nimport { ListGroup, Row, Col, Container, Button } from \"react-bootstrap\";\nimport SubmitButton from \"../utils/SubmitButton\";\nimport Tag from \"./Tag\";\nimport { TagContext } from \"./TagsDataProvider\";\n\n\nexport default (props) => {\n    const { tags, getTags, deleteTag} = useContext(TagContext);\n\n    tags.sort((a, b) => {\n        const nameA = a.label.toUpperCase();\n        const nameB = b.label.toUpperCase();\n        if (nameA < nameB) {\n          return -1;\n        }\n        if (nameA > nameB) {\n          return 1;\n        }\n        return 0;\n      });\n\n      useEffect(() => {\n        getTags();\n      }, []);\n\n\n      return (\n        <Container>\n            {tags.map((t) => {\n                return (\n                    <ListGroup key={t.id}>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>\n                                <Col >\n                                <h3><Tag tag={t} /></h3>\n                                </Col>\n                                <Col xs=\"6\">\n                                <SubmitButton \n                                label={\"Delete\"}\n                                variant={\"\"} \n                                onClick={ (e) => {\n                                    e.preventDefault()\n                                    deleteTag(t.id)\n                                    .then(getTags)\n                                }} />\n                                </Col>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    )\n            })}\n        </Container>\n        );\n}\n\n","/Users/michaeltyler/whattodo/client/src/components/tags/Tag.js",["103"],"import React from \"react\";\nimport { Badge } from \"react-bootstrap\"\n\nexport default ({ tag }) => {\n  return (\n    <Badge pill variant=\"primary\" className=\"m-1\">\n      {tag.label}\n    </Badge> \n  );\n};\n","/Users/michaeltyler/whattodo/client/src/components/todos/TodoForm.js",["104","105"],"//component to handle todo's added and edited\nimport React,{useRef, useState, useContext} from \"react\";\nimport { Form, FormGroup, Row, Col, Card, Container } from \"react-bootstrap\";\nimport RangeSlider from \"react-bootstrap-range-slider\";\nimport { TodoTagForm } from \"../todotags/TodoTagForm\";\nimport SubmitButton from \"../utils/SubmitButton\";\nimport { TodoContext } from \"./TodoDataProvider\";\n\n\nexport const TodoForm = (props) => {\n    const {createTodo, updateTodo} = useContext(TodoContext)\n\n    const [importanceValue, setImportanceValue] = useState(\"5\")\n    const [urgenceValue, setUrgenceValue] = useState(\"5\")\n\n    //set the initial todo tag id array to an empty one, \n    //when sending a Todo object to the server it will be expecting an array of either tag Ids or just an empty array.\n    //Instead of trying to set up post tags on the front end,\n    //we can use the back end and some loggic to create the many to many relationships on the back side\n    const [selectedTodoTagIds, setSelectedTodoTagIds] = useState([])\n\n    const taskRef = useRef(\"\")\n\n    const isEditMode = props.match.params.hasOwnProperty(\"todoId\")\n\n    const onToggleTodoTag = (changeTodoId) => {\n        let selectedTodoTagIdsList=[]\n        //check if the tag is already in the list of selected tags\n        if (selectedTodoTagIds.some((tagId) => tagId === changeTodoId)) {\n            //remove the id of the tag from the list of selected tags\n            selectedTodoTagIdsList = selectedTodoTagIds.filter(\n                (tagId) => tagId !== changeTodoId\n            );\n        } else {\n            //Add the tag to the list of selected tags\n            selectedTodoTagIds.push(changeTodoId);\n            selectedTodoTagIdsList = selectedTodoTagIds.slice();\n        }\n        //Set the component stat, which will re-render the component\n        setSelectedTodoTagIds(selectedTodoTagIdsList)\n    }\n\n    const constructNewTodo = () => {\n        if (taskRef.current.value === \"\") {\n            window.alert(\"Please fill in a task\")\n        } else {\n            // if validation success - create a new object from the form inputs and then either save or update it\n            const newTodo = {\n                task: taskRef.current.value,\n                urgent: parseInt(urgenceValue),\n                important: parseInt(importanceValue),\n                tagIds: selectedTodoTagIds\n            }\n            if(isEditMode) {\n                updateTodo(props.match.params.todoId, newTodo)\n                .then(props.history.push(`/`))\n            } else {\n                createTodo(newTodo)\n                .then(props.history.push(`/`))\n            }\n        }\n    }\n\n    return (\n        // <Card>\n        //     <Card.Body>\n                <Form  style={{ width: '40rem' }}>\n                    <h1 className=\"text-center my-4\">\n                        {isEditMode ? \"Edit Todo\" : \"Create Todo\"}\n                    </h1>\n                    <FormGroup>\n                        <Col>\n                        <Form.Label>Task</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter a task\" ref={taskRef} />\n                        </Col>\n                    </FormGroup>  \n                    <FormGroup>\n                        <Row sm={1} md={4}>\n                        <Col lg=\"6\">\n                        <Form.Label column sm=\"4\">\n                        Importance\n                        </Form.Label>\n                            <div className=\"text-muted\">\n                                Think about scoring this higher if you must complete this, \n                                or perhaps someone else is uncapable of completing this task.\n\n                            </div>\n                            <RangeSlider\n                                defaultValue={importanceValue}\n                                onChange={e => setImportanceValue(e.target.value)}\n                                min = {1}\n                                max = {10}\n                                tooltip={'auto'}\n                            />\n                        </Col>\n                        <Col lg=\"6\">\n                        <Form.Label column sm=\"4\">\n                        Urgency\n                        </Form.Label>\n                            <div className=\"text-muted\">\n                            Think about scoring this higher if you need to complete this by today or tomorrow. \n                            </div>\n                            <RangeSlider\n                                defaultValue={urgenceValue}\n                                onChange={e => setUrgenceValue(e.target.value)}\n                                min = {1}\n                                max = {10}\n                                tooltip={'off'}\n                            />\n                        </Col>\n                        </Row>\n                    </FormGroup>\n                    <TodoTagForm \n                    selectedTodoTagIds={selectedTodoTagIds}\n                    onToggleTodoTag={onToggleTodoTag}\n                    />\n                    <Row>\n                        <SubmitButton \n                        label={isEditMode ? \"Update Todo\" : \"Submit Todo\"}\n                        onClick ={(e)=>{\n                            e.preventDefault();\n                            constructNewTodo();\n                        }}\n                        />\n                    </Row>\n                </Form>\n        //     </Card.Body>\n        // </Card>\n    )\n}","/Users/michaeltyler/whattodo/client/src/components/utils/helper.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":13,"column":13,"nodeType":"112","endLine":13,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":16,"column":7,"nodeType":"115","endLine":16,"endColumn":9,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":31,"column":71,"nodeType":"119","messageId":"120","endLine":31,"endColumn":73},{"ruleId":"113","severity":1,"message":"121","line":13,"column":6,"nodeType":"115","endLine":13,"endColumn":8,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":4,"column":1,"nodeType":"125","endLine":14,"endColumn":2},{"ruleId":"126","severity":1,"message":"127","line":2,"column":42,"nodeType":"128","messageId":"129","endLine":2,"endColumn":48},{"ruleId":"123","severity":1,"message":"124","line":8,"column":1,"nodeType":"125","endLine":57,"endColumn":2},{"ruleId":"113","severity":1,"message":"121","line":25,"column":10,"nodeType":"115","endLine":25,"endColumn":12,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"124","line":4,"column":1,"nodeType":"125","endLine":10,"endColumn":3},{"ruleId":"126","severity":1,"message":"131","line":3,"column":37,"nodeType":"128","messageId":"129","endLine":3,"endColumn":41},{"ruleId":"126","severity":1,"message":"132","line":3,"column":43,"nodeType":"128","messageId":"129","endLine":3,"endColumn":52},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCategories' and 'getTodos'. Either include them or remove the dependency array.","ArrayExpression",["135"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["136"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["137"],"'Card' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"140","fix":"142"},"Update the dependencies array to be: [getCategories, getTodos]",{"range":"143","text":"144"},"Update the dependencies array to be: [getTags]",{"range":"145","text":"146"},{"range":"147","text":"146"},[544,546],"[getCategories, getTodos]",[575,577],"[getTags]",[663,665]]